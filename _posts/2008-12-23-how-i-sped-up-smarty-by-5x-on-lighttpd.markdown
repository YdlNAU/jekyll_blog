--- 
layout: posts
categories: performance
title: How I sped up Smarty by 5x on Lighttpd
tags: smarty performance lighttpd
---

How I sped up Smarty by 5x on Lighttpd
======================================


In this article I will discuss how I obtained a 5x speedup on a <a title="Smarty Template Engine for PHP" href="../tag/smarty/">Smarty</a> driven website on a Lighttpd Web server. This is achieved by enabling Lighttpd to a directly access and serve the cached files directly from the file system, rather than calling into Smarty.
<h2>Why is this approach so much faster?</h2>
Smarty's caching engine does a great job at compiling the templates at the correct interval and this creates a drastic speedup compared to recompiling the template on each page request.

However, even when Smarty is serving up cached pages, there is a lot of overhead added to each request when compared to the Web server directly serving the cached page. This is because PHP is still being loaded, the Smarty library is being included, and a small amount of logic is being performed within Smarty before the cached page is finally being passed along.
<h2>Is this caching technique right for every situation?</h2>
In cases where the cache life must be very short due to frequent changes to the data being rendered, the approach I will explain in this article may not be viable. However, in these cases it would be still possible to use a push method to remove cache when the data changes, versus adding the overhead of checking for changes on each page request. In my opinion, this push approach to caching reduces the cost to the lowest possible value, so if the need for performance is of the utmost importance, then it makes sense to implement this approach.

In my case, the data changes occur infrequently and a combination of clearing the cache on a scheduled interval plus a method to manually force a recompilation of a specific page is adequate, and a worthwhile trade-off for the performance increase. Also, I am a performance junkie.
<h2>Implementation Notes</h2>
Since Smarty is a flexible library, every implementation is unique. So while I cannot give imperitive instructions on how you can implement this lighttpd cache, can explain how I did it.

This was my lighttpd configuration for the site <strong>prior </strong>to implementing the cache. It has a few basic rewrite rules so request for a (htm|html) file gets passed to the index.php. This file acts as a handler to determine the actual smarty template to load, enabling the use of friendly URLs.

<pre><code><span style="color: #333333;">$</span></strong><span style="color: #333333;">HTTP</span><strong>["host"]</strong> == "www.site.com" {
    <strong>server.document-root</strong> = "/var/www/site/html"
    <strong>url.rewrite</strong> = (
        "/(.*)\.(htm|html)(\?.*)??$" =&gt; "/index.php?p=$1",
        "/(.*)/(\?.*)??$" =&gt; "/index.php?p=$1",
    	"/(.*)/(.*)/$" =&gt; "/index.php?p=$1/$2"
    )
}</span></code></pre>

And <strong>after </strong>implementing the cache, this is the lighttpd host configuration:

<pre><code><span style="color: #333333;"><strong>$</strong>HTTP</span>["host"] =~ "www.site.com" {
    <strong>server.document-root</strong> = "/var/www/site/html"
    <strong>magnet.attract-physical-path-to</strong> = ("/var/www/site/html/rewrite.lua")
}</span></code></pre>

Below is the code for rewrite.lua (referenced in the lighttpd conf above) which implements <a href="http://redmine.lighttpd.net/wiki/1/Docs:ModMagnet" target="_blank">lighttpd mod_magnet</a> to handle the rewrite rules. It checks the file system to determine if a cached file exists, and if so, it serves that file. Otherwise, it rewrites to the index.php handler so smarty can generate the new cache file.

The <code>cache_path</code> variable in the rewrite.lua script is my smarty cache dir <code>$smarty-&gt;cache_dir</code>, plus the <code>$smarty-&gt;cache_id</code> (mine is blank, be sure to append it to the cache_path variable as a subdir of your smarty cache_dir)

<div id="gist-33018" class="gist">
<div class="gist-file">
<div class="gist-data gist-syntax">
		<div class="gist-highlight"><pre><div class="line" id="LC1"><span class="n">cache_path</span> <span class="o">=</span> <span class="s2">"</span><span class="s">/var/www/site/tmp"</span></div><div class="line" id="LC2"><span class="n">cache_code</span> <span class="o">=</span> <span class="s2">"</span><span class="s">compile"</span></div><div class="line" id="LC3"><br></div><div class="line" id="LC4"><span class="c1">-- render and cache to the filesystem</span></div><div class="line" id="LC5"><span class="k">function</span> <span class="nf">cache_gen</span><span class="p">()</span></div><div class="line" id="LC6">	<span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">physical.path"</span><span class="p">]</span>  <span class="o">=</span> <span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">physical.doc-root"</span><span class="p">]</span> <span class="p">..</span> <span class="s2">"</span><span class="s">/index.php"</span></div><div class="line" id="LC7">	<span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">uri.query"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"</span><span class="s">p="</span> <span class="p">..</span> <span class="nb">string.gsub</span><span class="p">(</span><span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">uri.path"</span><span class="p">],</span> <span class="s2">"</span><span class="s">\.(htm|html)$"</span><span class="p">,</span> <span class="s2">"</span><span class="s">"</span><span class="p">)</span> </div><div class="line" id="LC8">	<span class="c1">--print ("CACHE: " .. lighty.env["uri.query"])</span></div><div class="line" id="LC9"><span class="k">end</span></div><div class="line" id="LC10"><br></div><div class="line" id="LC11"><span class="c1">-- load the cached copy from the filesystem</span></div><div class="line" id="LC12"><span class="k">function</span> <span class="nf">cache_load</span><span class="p">()</span> </div><div class="line" id="LC13">	<span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">physical.path"</span><span class="p">]</span> <span class="o">=</span> <span class="n">cache_path</span> <span class="p">..</span> <span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">uri.path"</span><span class="p">]</span></div><div class="line" id="LC14">	<span class="c1">--print ("LOAD: " .. cache_path .. lighty.env["uri.path"])</span></div><div class="line" id="LC15"><span class="k">end</span></div><div class="line" id="LC16"><br></div><div class="line" id="LC17"><span class="c1">-- add index file if directory listing requested</span></div><div class="line" id="LC18"><span class="k">if</span><span class="p">(</span><span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">uri.path"</span><span class="p">]</span> <span class="o">==</span> <span class="s2">"</span><span class="s">"</span> <span class="ow">or</span> <span class="nb">string.find</span><span class="p">(</span><span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">uri.path"</span><span class="p">],</span> <span class="s2">"</span><span class="s">/"</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">))</span> <span class="k">then</span></div><div class="line" id="LC19">	<span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">uri.path"</span><span class="p">]</span> <span class="o">=</span> <span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">uri.path"</span><span class="p">]</span> <span class="p">..</span> <span class="s2">"</span><span class="s">index.html"</span></div><div class="line" id="LC20"><span class="k">end</span></div><div class="line" id="LC21"><br></div><div class="line" id="LC22"><span class="c1">-- process htm|html file requests</span></div><div class="line" id="LC23"><span class="k">if</span><span class="p">(</span><span class="nb">string.find</span><span class="p">(</span><span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">uri.path"</span><span class="p">],</span> <span class="s2">"</span><span class="s">htm"</span><span class="p">,</span> <span class="o">-</span><span class="mi">4</span><span class="p">))</span> <span class="k">then</span> </div><div class="line" id="LC24">	<span class="n">exists</span> <span class="o">=</span> <span class="n">lighty</span><span class="p">.</span><span class="n">stat</span><span class="p">(</span><span class="n">cache_path</span> <span class="p">..</span> <span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">uri.path"</span><span class="p">])</span></div><div class="line" id="LC25"><br></div><div class="line" id="LC26">	<span class="n">cache_code_passed</span> <span class="o">=</span> <span class="kc">false</span></div><div class="line" id="LC27">	<span class="k">if</span><span class="p">(</span><span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">uri.query"</span><span class="p">]</span> <span class="p">)</span> <span class="k">then</span></div><div class="line" id="LC28">		<span class="n">cache_code_passed</span> <span class="o">=</span> <span class="nb">string.find</span><span class="p">(</span><span class="n">lighty</span><span class="p">.</span><span class="n">env</span><span class="p">[</span><span class="s2">"</span><span class="s">uri.query"</span><span class="p">],</span> <span class="n">cache_code</span><span class="p">)</span></div><div class="line" id="LC29">	<span class="k">end</span></div><div class="line" id="LC30"><br></div><div class="line" id="LC31">	<span class="k">if</span><span class="p">(</span><span class="n">exists</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">cache_code_passed</span><span class="p">)</span> <span class="k">then</span></div><div class="line" id="LC32">		<span class="n">action</span> <span class="o">=</span> <span class="n">cache_load</span><span class="p">()</span></div><div class="line" id="LC33">	<span class="k">else</span></div><div class="line" id="LC34">		<span class="n">action</span> <span class="o">=</span> <span class="n">cache_gen</span><span class="p">()</span></div><div class="line" id="LC35">	<span class="k">end</span></div><div class="line" id="LC36"><span class="k">end</span></div></pre></div>
</div>
<div class="gist-meta">
	<a href="http://gist.github.com/raw/33018/9aa46360e1679ff5e1960f8281dcb2c734c56af7/gistfile1.lua" style="float:right;">view raw</a>
	<a href="http://gist.github.com/33018#file_gistfile1.lua" style="float:right;margin-right:10px;color:#666">gistfile1.lua</a>
	<a href="http://gist.github.com/33018">This Gist</a> brought to you by <a href="http://github.com">GitHub</a>.
</div>
</div>
</div>


At this point, lighttpd is rewriting all requests to my index.php handler since it will not find a cached copy in the the cache_path dir. I now have to work with the index.php handler file so Smarty will save the compiled HTML files into the cache_path defined in rewrite.lua. To do this, I wrote a custom cache handler function for smarty and stuck it in the index.php file. So far, my Smarty setup is looking like this:

<div id="gist-33019" class="gist">
<div class="gist-file">
<div class="gist-data gist-syntax">
		<div class="gist-highlight"><pre><div class="line" id="LC1"><span class="cp">&lt;?php</span></div><div class="line" id="LC2"><br></div><div class="line" id="LC3"><span class="k">require</span> <span class="s2">"../includes/smarty/Smarty.class.php"</span><span class="p">;</span></div><div class="line" id="LC4"><span class="nv">$smarty</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Smarty</span><span class="p">;</span></div><div class="line" id="LC5"><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">template_dir</span> 	<span class="o">=</span> <span class="s1">'templates'</span><span class="p">;</span></div><div class="line" id="LC6"><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">compile_dir</span>  	<span class="o">=</span> <span class="s1">'compile'</span><span class="p">;</span> </div><div class="line" id="LC7"><br></div><div class="line" id="LC8"><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">cache_dir</span>    	<span class="o">=</span> <span class="s1">'/var/www/site/tmp'</span><span class="p">;</span></div><div class="line" id="LC9"><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">caching</span>      	<span class="o">=</span> <span class="k">true</span><span class="p">;</span></div><div class="line" id="LC10"><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">force_compile</span>	<span class="o">=</span> <span class="k">true</span><span class="p">;</span>  </div><div class="line" id="LC11"><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">compile_id</span>     <span class="o">=</span> <span class="s1">''</span><span class="p">;</span></div><div class="line" id="LC12"><br></div><div class="line" id="LC13"><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">cache_handler_func</span> <span class="o">=</span> <span class="s1">'server_rewrite_cache_handler'</span><span class="p">;</span></div><div class="line" id="LC14"><span class="k">function</span> <span class="nf">server_rewrite_cache_handler</span><span class="p">(</span><span class="nv">$action</span><span class="p">,</span> <span class="o">&amp;</span><span class="nv">$smarty_obj</span><span class="p">,</span> <span class="o">&amp;</span><span class="nv">$cache_content</span><span class="p">,</span> <span class="nv">$tpl_file</span><span class="o">=</span><span class="k">null</span><span class="p">,</span> <span class="nv">$cache_id</span><span class="o">=</span><span class="k">null</span><span class="p">,</span> <span class="nv">$compile_id</span><span class="o">=</span><span class="k">null</span><span class="p">,</span> <span class="nv">$exp_time</span><span class="o">=</span><span class="k">null</span><span class="p">)</span> </div><div class="line" id="LC15"><span class="p">{</span></div><div class="line" id="LC16">	<span class="nv">$cache_file</span> <span class="o">=</span> <span class="nv">$smarty_obj</span><span class="o">-&gt;</span><span class="na">cache_dir</span> <span class="o">.</span> <span class="s1">'/'</span> <span class="o">.</span> <span class="nv">$compile_id</span> <span class="o">.</span> <span class="nv">$cache_id</span><span class="p">;</span>	</div><div class="line" id="LC17">	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">is_file</span><span class="p">(</span><span class="nv">$cache_file</span><span class="p">))</span> <span class="p">{</span> </div><div class="line" id="LC18">		<span class="nv">$base_file</span> <span class="o">=</span>  <span class="nb">basename</span><span class="p">(</span><span class="nv">$cache_file</span><span class="p">);</span></div><div class="line" id="LC19">		<span class="nv">$base_dir</span> <span class="o">=</span> <span class="nb">dirname</span><span class="p">(</span><span class="nv">$cache_file</span><span class="p">);</span>  </div><div class="line" id="LC20">		<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">is_dir</span><span class="p">(</span><span class="nv">$base_dir</span><span class="p">))</span> <span class="nb">mkdir</span><span class="p">(</span><span class="nv">$base_dir</span><span class="p">,</span> <span class="m">0777</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span> </div><div class="line" id="LC21">	<span class="p">}</span></div><div class="line" id="LC22">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">switch</span> <span class="p">(</span><span class="nv">$action</span><span class="p">)</span> <span class="p">{</span></div><div class="line" id="LC23">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">case</span> <span class="s1">'read'</span><span class="o">:</span></div><div class="line" id="LC24">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">is_file</span><span class="p">(</span><span class="nv">$cache_file</span><span class="p">))</span> <span class="k">return</span> <span class="k">false</span><span class="p">;</span> <span class="k">else</span> <span class="k">return</span> <span class="k">true</span><span class="p">;</span> </div><div class="line" id="LC25">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">break</span><span class="p">;</span></div><div class="line" id="LC26">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">case</span> <span class="s1">'write'</span><span class="o">:</span></div><div class="line" id="LC27">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">return</span> <span class="nb">file_put_contents</span><span class="p">(</span><span class="nv">$cache_file</span><span class="p">,</span> <span class="nv">$cache_content</span><span class="p">);</span> </div><div class="line" id="LC28">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">break</span><span class="p">;</span>            </div><div class="line" id="LC29">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">case</span> <span class="s1">'clear'</span><span class="o">:</span></div><div class="line" id="LC30">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">return</span> <span class="o">@</span><span class="nb">unlink</span><span class="p">(</span><span class="nv">$cache_file</span><span class="p">);</span></div><div class="line" id="LC31">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">break</span><span class="p">;</span>            </div><div class="line" id="LC32">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">default</span><span class="o">:</span></div><div class="line" id="LC33">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">false</span><span class="p">;</span></div><div class="line" id="LC34">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">break</span><span class="p">;</span></div><div class="line" id="LC35">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span></div><div class="line" id="LC36"><span class="p">}</span></div><div class="line" id="LC37"><br></div><div class="line" id="LC38"><span class="nv">$_p</span> <span class="o">=</span> <span class="nv">$_REQUEST</span><span class="p">[</span><span class="s1">'p'</span><span class="p">];</span> <span class="c1">// detect the actual file path requested so I can save the cached copy with the correct path and filename </span></div><div class="line" id="LC39"><span class="nv">$page</span> <span class="o">=</span> <span class="s1">''</span><span class="p">;</span> <span class="c1">// my logic here to determine the correct smarty template to display</span></div><div class="line" id="LC40"><span class="nv">$smarty</span><span class="o">-&gt;</span><span class="na">display</span><span class="p">(</span><span class="nv">$page</span><span class="p">,</span> <span class="nv">$_p</span><span class="p">);</span></div><div class="line" id="LC41"><br></div><div class="line" id="LC42"><span class="cp">?&gt;</span><span class="x"></span></div></pre></div>
</div>
<div class="gist-meta">
	<a href="http://gist.github.com/raw/33019/939338501c46affa1c94e88a9e71aac3b1ebcc50/gistfile1.php" style="float:right;">view raw</a>
	<a href="http://gist.github.com/33019#file_gistfile1.php" style="float:right;margin-right:10px;color:#666">gistfile1.php</a>
	<a href="http://gist.github.com/33019">This Gist</a> brought to you by <a href="http://github.com">GitHub</a>.
</div>
</div>
</div>


The main thing here is that the caching is enabled, each request will recompile the template, the compile_id is blank, and the cache_dir matches what is set for cache_path in rewrite.lua.

The function <code>server_rewrite_cache_handler()</code> overrides the default smarty cache read/write/clear logic so that the file is saved in the correct directory structure that matches the request that was rewritten from lighttpd.

The one last thing is to disable several lines of code in the smarty/internals/core.write_cache_file.php, as by default Smarty will add some serialized data to the top of the cache data it passes to our custom cache handler function. The changes are shown below and occur around line 65 and 66 of the core.write_cache_file.php file.

<pre><code><span style="color: #333333;">#$_cache_info = serialize($smarty-&gt;_cache_info);
#$params['results'] = strlen($_cache_info) ."\n". $_cache_info.$params['results'];
</span></span></code></pre>

That is all, you should see a drastic speedup at this point.
